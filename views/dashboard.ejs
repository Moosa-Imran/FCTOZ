<!DOCTYPE html>
<html lang="en" class="light">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= title %></title>

  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Google Fonts: Inter -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

  <!-- Chart.js for data visualization -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- Lucide Icons -->
  <script src="https://unpkg.com/lucide@latest"></script>

  <!-- Custom Tailwind Config for Gold Theme -->
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            gold: {
              50: '#fefce8', 100: '#fef9c3', 200: '#fef08a', 300: '#fde047',
              400: '#facc15', 500: '#eab308', 600: '#ca8a04', 700: '#a16207',
              800: '#854d0e', 900: '#713f12', 950: '#422006'
            }
          },
          boxShadow: {
            'gold-glow': '0 0 15px 5px rgba(250, 204, 21, 0.4)',
            'gold-glow-dark': '0 0 15px 5px rgba(250, 204, 21, 0.6)',
          }
        }
      }
    }
  </script>

  <style>
    /* Custom scrollbar */
    ::-webkit-scrollbar { width: 8px; height: 8px; }
    ::-webkit-scrollbar-track { background: transparent; }
    ::-webkit-scrollbar-thumb { background-color: rgba(156, 163, 175, 0.5); border-radius: 10px; border: 2px solid transparent; background-clip: content-box; }
    ::-webkit-scrollbar-thumb:hover { background-color: rgba(156, 163, 175, 0.7); }

    /* Smooth theme transitions and Inter font */
    body { font-family: 'Inter', sans-serif; }
    *, *::before, *::after { transition: color, background-color, border-color, box-shadow, transform 300ms cubic-bezier(0.4, 0, 0.2, 1); }
    
    /* Modern Glow Effects for Dark Mode */
    .dark body { background: radial-gradient(ellipse at top, rgba(113, 63, 18, 0.15), #000 70%), #000; }
    .dark .card-glow { border-color: rgba(202, 138, 4, 0.15); }
    .dark .card-glow:hover { transform: translateY(-4px); box-shadow: 0 10px 25px -5px rgba(202, 138, 4, 0.2); border-color: rgba(202, 138, 4, 0.3); }
    .dark .button-glow { box-shadow: 0 0 15px -2px rgba(234, 179, 8, 0.5); }
    .dark .button-glow:hover { box-shadow: 0 0 25px 2px rgba(234, 179, 8, 0.7); }
    .dark .active-nav-glow { box-shadow: inset 3px 0 10px -3px rgba(250, 204, 21, 0.4); border-left: 2px solid #ca8a04; }
    .dark .search-glow:focus { box-shadow: 0 0 15px 0px rgba(250, 204, 21, 0.3); }
  </style>

  <script>
    // Set initial theme
    (function () {
      let theme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      if (theme === 'dark') document.documentElement.classList.add('dark');
    })();
  </script>
</head>

<body class="bg-slate-50 dark:bg-black text-slate-800 dark:text-slate-200">

  <div id="sidebar-overlay" class="fixed inset-0 bg-black/60 z-30 md:hidden hidden"></div>
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside
      class="fixed top-0 left-0 h-full w-64 bg-white dark:bg-slate-900/60 backdrop-blur-lg border-r border-slate-200 dark:border-slate-800 transition-transform duration-300 ease-in-out z-40 md:translate-x-0 -translate-x-full">
      <div class="flex items-center justify-between h-20 border-b border-slate-200 dark:border-slate-800 px-6">
        <div class="flex items-center">
          <i data-lucide="candlestick-chart" class="h-8 w-8 text-gold-500"></i>
          <h1 class="ml-3 text-2xl font-bold">FCTOZ</h1>
        </div>
        <button id="sidebar-close-button" class="md:hidden text-slate-500 dark:text-slate-400 hover:text-slate-800 dark:hover:text-white">
            <i data-lucide="x" class="h-6 w-6"></i>
        </button>
      </div>
      <nav class="p-4 space-y-2">
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium bg-gold-50 dark:bg-gold-500/10 text-gold-600 dark:text-gold-300 rounded-lg active-nav-glow">
          <i data-lucide="layout-dashboard" class="h-5 w-5 mr-3"></i> Overview
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="target" class="h-5 w-5 mr-3"></i> My Challenges
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="file-text" class="h-5 w-5 mr-3"></i> P&L Reports
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="wallet-cards" class="h-5 w-5 mr-3"></i> Payouts
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="trophy" class="h-5 w-5 mr-3"></i> Leaderboard
        </a>
         <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="book-open" class="h-5 w-5 mr-3"></i> FCTOZ Academy
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="message-square" class="h-5 w-5 mr-3"></i> Support Tickets
        </a>
        <a href="#" class="flex items-center px-4 py-2.5 text-sm font-medium text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-800/50 rounded-lg">
          <i data-lucide="settings" class="h-5 w-5 mr-3"></i> Account Settings
        </a>
      </nav>
      <div class="absolute bottom-0 w-full p-4 border-t border-slate-200 dark:border-slate-800">
        <div class="flex items-center p-3 bg-slate-100 dark:bg-slate-800/50 rounded-lg">
          <img src="https://placehold.co/40x40/ca8a04/ffffff?text=<%= (typeof user !== 'undefined' && user.name) ? user.name.charAt(0) : 'U' %>" alt="User Avatar" class="h-10 w-10 rounded-full" onerror="this.onerror=null;this.src='https://placehold.co/40x40/ca8a04/ffffff?text=U';">
          <div class="ml-3">
            <p class="text-sm font-semibold"><%= (typeof user !== 'undefined' && user.name) ? user.name : 'Guest User' %></p>
            <p class="text-xs text-slate-500 dark:text-slate-400"><%= (typeof user !== 'undefined' && user.email) ? user.email : 'Please log in' %></p>
          </div>
        </div>
      </div>
    </aside>

    <!-- Main Content -->
    <div class="flex-1 md:ml-64">
      <!-- Header/Navbar -->
      <header class="fixed top-0 left-0 md:left-64 right-0 h-20 bg-white/70 dark:bg-black/70 backdrop-blur-lg border-b border-slate-200 dark:border-slate-800 z-30">
        <div class="flex items-center justify-between h-full px-6">
          <button id="mobile-menu-button" class="md:hidden text-slate-600 dark:text-slate-300"> <i data-lucide="menu" class="h-6 w-6"></i> </button>
          <div class="hidden md:flex items-center">
            <div class="relative">
              <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-slate-400"></i>
              <input type="text" placeholder="Search Challenges, Articles..." class="w-64 pl-10 pr-4 py-2 text-sm bg-slate-100 dark:bg-slate-800 border border-transparent focus:border-gold-500 focus:ring-0 rounded-lg search-glow">
            </div>
          </div>
          <div class="flex items-center space-x-4">
            <button id="theme-toggle" class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 text-slate-600 dark:text-slate-300">
              <i data-lucide="sun" class="h-5 w-5 hidden dark:block"></i>
              <i data-lucide="moon" class="h-5 w-5 block dark:hidden"></i>
            </button>
            <button class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 text-slate-600 dark:text-slate-300 relative">
              <i data-lucide="bell" class="h-5 w-5"></i>
              <span class="absolute top-1.5 right-1.5 h-2 w-2 bg-red-500 rounded-full"></span>
            </button>
          </div>
        </div>
      </header>

      <main class="pt-24 px-4 sm:px-6 lg:px-8 pb-8">
        <!-- Welcome Header -->
        <div>
          <h1 class="text-3xl font-bold">Welcome Back, <%= (typeof user !== 'undefined' && user.name) ? user.name : 'Trader' %>!</h1>
          <p class="mt-1 text-slate-500 dark:text-slate-400">Here's your FCTOZ account overview. (<%= (typeof user !== 'undefined' && user.userId) ? user.userId : 'N/A' %>)</p>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mt-6">
          <div class="p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <div class="flex justify-between items-start">
              <div>
                <p class="text-sm font-medium text-slate-500 dark:text-slate-400">Account Balance</p>
                <p class="text-3xl font-bold mt-1">$<%= (typeof user !== 'undefined' && user.accountBalance) ? user.accountBalance.toLocaleString() : '0' %></p>
              </div>
              <div class="p-2 bg-gold-100 dark:bg-gold-500/10 rounded-lg"> <i data-lucide="wallet" class="h-6 w-6 text-gold-500 dark:text-gold-400"></i> </div>
            </div>
            <p class="text-xs text-green-500 flex items-center mt-2"><i data-lucide="arrow-up" class="h-3 w-3 mr-1"></i> 12.5% vs last 30 days</p>
          </div>
          <div class="p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <div class="flex justify-between items-start">
              <div>
                <p class="text-sm font-medium text-slate-500 dark:text-slate-400">Active Challenge</p>
                <p class="text-xl font-bold mt-1"><%= (typeof user !== 'undefined' && user.activeChallenge) ? user.activeChallenge.name : 'No Active Challenge' %></p>
              </div>
              <div class="p-2 bg-orange-100 dark:bg-orange-500/10 rounded-lg"> <i data-lucide="target" class="h-6 w-6 text-orange-500 dark:text-orange-400"></i> </div>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-1.5 mt-2 dark:bg-gray-700">
                <div class="bg-orange-500 h-1.5 rounded-full" style="width: <%= (typeof user !== 'undefined' && user.activeChallenge) ? user.activeChallenge.progress : 0 %>%"></div>
            </div>
          </div>
          <div class="p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <div class="flex justify-between items-start">
              <div>
                <p class="text-sm font-medium text-slate-500 dark:text-slate-400">Profit Share</p>
                <p class="text-3xl font-bold mt-1"><%= (typeof user !== 'undefined' && user.profitShare) ? user.profitShare : '0' %>%</p>
              </div>
              <div class="p-2 bg-green-100 dark:bg-green-500/10 rounded-lg"> <i data-lucide="pie-chart" class="h-6 w-6 text-green-500 dark:text-green-400"></i> </div>
            </div>
             <p class="text-xs text-slate-500 flex items-center mt-2">Eligible for next payout</p>
          </div>
          <div class="p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <div class="flex justify-between items-start">
              <div>
                <p class="text-sm font-medium text-slate-500 dark:text-slate-400">Win Rate</p>
                <p class="text-3xl font-bold mt-1"><%= (typeof user !== 'undefined' && user.winRate) ? user.winRate : '0' %>%</p>
              </div>
              <div class="p-2 bg-pink-100 dark:bg-pink-500/10 rounded-lg"> <i data-lucide="trending-up" class="h-6 w-6 text-pink-500 dark:text-pink-400"></i> </div>
            </div>
            <p class="text-xs text-green-500 flex items-center mt-2"><i data-lucide="arrow-up" class="h-3 w-3 mr-1"></i> 0.5% vs last 30 days</p>
          </div>
        </div>

        <!-- Main Grid: Chart and Recent Activity -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6">
          <div class="lg:col-span-2 p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <h2 class="text-lg font-semibold">Account Growth</h2>
            <div class="mt-4 h-80"> <canvas id="accountGrowthChart"></canvas> </div>
          </div>

          <div class="p-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
            <h2 class="text-lg font-semibold">Recent Activity</h2>
            <ul class="mt-4 space-y-4">
              <% if (typeof user !== 'undefined' && user.recentActivity) { %>
                <% user.recentActivity.forEach(activity => { %>
                <li class="flex items-start">
                  <div class="flex-shrink-0 h-10 w-10 flex items-center justify-center bg-<%= activity.color %>-100 dark:bg-<%= activity.color %>-500/10 rounded-full">
                    <i data-lucide="<%= activity.icon %>" class="h-5 w-5 text-<%= activity.color %>-500"></i>
                  </div>
                  <div class="ml-3">
                    <p class="text-sm"><%- activity.details %></p>
                    <p class="text-xs text-slate-500 dark:text-slate-400"><%= activity.time %></p>
                  </div>
                </li>
                <% }); %>
              <% } else { %>
                <li class="text-sm text-slate-500">No recent activity.</li>
              <% } %>
            </ul>
          </div>
        </div>

        <!-- Data Table -->
        <div class="mt-6 bg-white dark:bg-slate-900/50 rounded-xl border border-slate-200 dark:border-slate-800 card-glow">
          <div class="p-6 flex justify-between items-center">
            <h2 class="text-lg font-semibold">Transaction History</h2>
            <button class="px-4 py-2 text-sm font-medium text-white bg-gold-600 hover:bg-gold-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gold-500 dark:focus:ring-offset-black button-glow"> View All </button>
          </div>
          <div class="overflow-x-auto">
            <table class="w-full text-sm text-left">
              <thead class="bg-slate-50 dark:bg-slate-900 border-b border-slate-200 dark:border-slate-800">
                <tr>
                  <th class="px-6 py-3 font-medium">Transaction ID</th>
                  <th class="px-6 py-3 font-medium">Type</th>
                  <th class="px-6 py-3 font-medium">Date</th>
                  <th class="px-6 py-3 font-medium">Amount</th>
                  <th class="px-6 py-3 font-medium">Status</th>
                </tr>
              </thead>
              <tbody>
                <% if (typeof user !== 'undefined' && user.transactions) { %>
                  <% user.transactions.forEach(tx => { %>
                  <tr class="border-b border-slate-200 dark:border-slate-800">
                    <td class="px-6 py-4 font-mono text-gold-500"><%= tx.id %></td>
                    <td class="px-6 py-4 font-semibold <%= tx.type === 'Deposit' ? 'text-green-500' : (tx.type === 'Payout' || tx.type === 'Withdrawal' ? 'text-blue-500' : 'text-slate-500') %>"><%= tx.type %></td>
                    <td class="px-6 py-4"><%= tx.date %></td>
                    <td class="px-6 py-4"><%= tx.amount %></td>
                    <td class="px-6 py-4">
                      <% if(tx.status === 'Completed') { %>
                        <span class="inline-flex items-center px-2.5 py-1 text-xs font-medium text-green-700 bg-green-100 dark:text-green-300 dark:bg-green-500/20 rounded-full"> <i data-lucide="check-circle-2" class="w-4 h-4 mr-1.5"></i> Completed </span>
                      <% } else if(tx.status === 'Pending') { %>
                        <span class="inline-flex items-center px-2.5 py-1 text-xs font-medium text-yellow-700 bg-yellow-100 dark:text-yellow-300 dark:bg-yellow-500/20 rounded-full"> <i data-lucide="refresh-cw" class="w-4 h-4 mr-1.5 animate-spin" style="animation-duration: 2s;"></i> Pending </span>
                      <% } else { %>
                        <span class="inline-flex items-center px-2.5 py-1 text-xs font-medium text-red-700 bg-red-100 dark:text-red-300 dark:bg-red-500/20 rounded-full"> <i data-lucide="x-circle" class="w-4 h-4 mr-1.5"></i> Failed </span>
                      <% } %>
                    </td>
                  </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="5" class="text-center py-10 text-slate-500">No transactions found.</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </main>
    </div>
  </div>

  <script>
    // Initialize Lucide Icons
    lucide.createIcons();

    // --- Theme Toggler ---
    const themeToggle = document.getElementById('theme-toggle');
    const htmlEl = document.documentElement;
    themeToggle.addEventListener('click', () => {
      htmlEl.classList.toggle('dark');
      localStorage.setItem('theme', htmlEl.classList.contains('dark') ? 'dark' : 'light');
      renderChart(); // Re-render chart with new theme colors
    });

    // --- Mobile Sidebar ---
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const sidebar = document.querySelector('aside');
    const sidebarCloseButton = document.getElementById('sidebar-close-button');
    const sidebarOverlay = document.getElementById('sidebar-overlay');
    const openSidebar = () => { sidebar.classList.remove('-translate-x-full'); sidebarOverlay.classList.remove('hidden'); };
    const closeSidebar = () => { sidebar.classList.add('-translate-x-full'); sidebarOverlay.classList.add('hidden'); };
    mobileMenuButton.addEventListener('click', openSidebar);
    sidebarCloseButton.addEventListener('click', closeSidebar);
    sidebarOverlay.addEventListener('click', closeSidebar);

    // --- Chart.js Implementation ---
    let accountGrowthChart;
    const renderChart = () => {
      setTimeout(() => {
        const isDarkMode = document.documentElement.classList.contains('dark');
        const gridColor = isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';
        const labelColor = isDarkMode ? '#cbd5e1' : '#475569';
        const goldColor = '#eab308';
        const goldColorDark = '#facc15';
        const tooltipBgColor = isDarkMode ? '#0f172a' : '#fff';
        const tooltipBorderColor = isDarkMode ? '#334155' : '#e2e8f0';

        const ctx = document.getElementById('accountGrowthChart').getContext('2d');
        const gradient = ctx.createLinearGradient(0, 0, 0, 300);
        gradient.addColorStop(0, isDarkMode ? 'rgba(250, 204, 21, 0.4)' : 'rgba(234, 179, 8, 0.7)');
        gradient.addColorStop(1, isDarkMode ? 'rgba(250, 204, 21, 0)' : 'rgba(234, 179, 8, 0.1)');

        const chartData = {
          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
          datasets: [{
            label: 'Account Value',
            data: [45000, 48000, 47000, 51000, 55000, 53000, 54329],
            borderColor: isDarkMode ? goldColorDark : goldColor,
            backgroundColor: gradient,
            fill: true, tension: 0.4,
            pointBackgroundColor: isDarkMode ? goldColorDark : goldColor,
            pointBorderColor: '#fff', pointHoverBackgroundColor: '#fff',
            pointHoverBorderColor: isDarkMode ? goldColorDark : goldColor,
            pointRadius: 4, pointHoverRadius: 6,
          }]
        };

        const chartOptions = {
          responsive: true, maintainAspectRatio: false,
          scales: {
            y: { beginAtZero: false, grid: { color: gridColor, drawBorder: false }, ticks: { color: labelColor, callback: (value) => '$' + value / 1000 + 'k' } },
            x: { grid: { display: false }, ticks: { color: labelColor } }
          },
          plugins: {
            legend: { display: false },
            tooltip: {
              backgroundColor: tooltipBgColor, titleColor: isDarkMode ? '#e2e8f0' : '#334155',
              bodyColor: isDarkMode ? '#cbd5e1' : '#475569', borderColor: tooltipBorderColor,
              borderWidth: 1, padding: 12, displayColors: false,
              callbacks: { label: (context) => `Balance: $${context.parsed.y.toLocaleString()}` }
            },
            afterDraw: (chart) => {
              if (isDarkMode) {
                const ctx = chart.ctx;
                ctx.save();
                ctx.shadowColor = 'rgba(250, 204, 21, 0.5)';
                ctx.shadowBlur = 20;
                chart.draw();
                ctx.restore();
              }
            }
          },
          interaction: { mode: 'index', intersect: false },
        };

        if (accountGrowthChart) accountGrowthChart.destroy();
        accountGrowthChart = new Chart(ctx, { type: 'line', data: chartData, options: chartOptions });
      }, 50);
    };
    window.addEventListener('load', renderChart);
  </script>

</body>
</html>
